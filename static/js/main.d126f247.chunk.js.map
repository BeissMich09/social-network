{"version":3,"sources":["assets/img/Loading-circles-acs-rectangles.webp","components/common/Preloader/Preloader.module.css","assets/img/work_icon.svg","assets/img/no_work_icon.svg","components/Dialogues/Dialogues.module.css","components/Dialogues/PersonDialogue/PersonDialogue.module.css","components/Dialogues/PrivateDialogues/СloudSend/CloudSend.module.css","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","api/api.js","Redux/profile_reducer.js","Redux/dialogues_reducer.js","Redux/friends_reducer.js","Redux/users_reduser.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.jsx","components/Profile/ProfileContainer.jsx","components/Setting/Setting.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Users/UserPresent.jsx","components/common/Paginator/Paginator.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Dialogues/PersonDialogue/DialogueItem/DialogueItem.jsx","components/Dialogues/PersonDialogue/PersonDialogue.jsx","components/Dialogues/PrivateDialogues/Message/Message.jsx","components/Dialogues/PrivateDialogues/СloudSend/CloudSendForm.jsx","components/Dialogues/PrivateDialogues/СloudSend/CloudSendContainer.jsx","components/Dialogues/PrivateDialogues/PrivateDialogues.jsx","components/Dialogues/Dialogues.jsx","components/Dialogues/DialoguesContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","index.js","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/Profile/Profile.module.css","assets/img/user-avatar.png","components/Profile/MyPosts/Post/Post.module.css","components/Dialogues/PrivateDialogues/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Dialogues/PersonDialogue/DialogueItem/DialogueItem.module.css","components/Dialogues/PrivateDialogues/PrivateDialogues.module.css","components/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","initialState","postData","id","message","likes","profile","setStatusAC","type","reducerProfile","state","action","newPost","Object","assign","concat","newPostText","userArr","name","messageArr","reducerDialogues","newNewMessage","newMessage","arrayBest","allFriend","reduerFriends","users","totalUsersCount","isFetching","followingInProgress","setIsFetching","toggleIsFollowingProgress","reducerUsers","map","user","followed","filter","login","isAuth","setUserData","getAuthUserData","dispatch","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialoguesPage","friendPage","reducerFriends","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","style","header","src","alt","loginBlock","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navbar","navbar","item","navLink","activeClassName","activeLink","itemDisabled","Post","classProfile","like","requiredField","value","maxLengthCretor","maxLength","length","FormControl","input","meta","child","showError","touched","error","formControl","children","Textarea","restProps","Input","maxLength30","reduxForm","onSubmit","handleSubmit","add_news","Field","validate","component","placeholder","MyPosts","postsElem","key","my_posts","values","addPost","added_news","MyPostsContainer","newPostTextChange","addPostActionCreator","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","ProfileInfo","photo","photos","large","userPhoto","info","fullName","contacts","facebook","lookingForAJob","workLogo","searchWorkLogo","lookingForAJobDescription","aboutMe","Profile","content","mapStateToPropsForRedirect","withAuthRedirect","Container","RedirectComponent","ProfileContainer","params","history","push","getUserProfile","getStatus","compose","withRouter","Setting","Music","News","UsersPresent","small","buttons","disabled","some","unfollow","follow","Paginator","totalItemsCount","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","button","p","cn","selectedPage","pageNumber","getUsers","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","UsersAPIComponent","onPageChanged","setCurrentPage","UserPresent","followSuccess","unfollowSuccess","items","totalCount","DialogueItem","active","PersonDialogue","dialoguesElem","dialogue_item","Message","name_photo","maxLength100","newMessageText","sendMessage","sendMessageActionCreator","PrivateDialogues","messageElem","messages","Dialogues","dialogues_content","maxLength20","form_item","remember","rememberLable","htmlFor","checkbox","formSummaryError","Login","formData","stopSubmit","_error","App","initializeApp","path","render","UsersContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d126f247.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loading-circles-acs-rectangles.492f13cb.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Preloader_item__1FUAg\"};","module.exports = __webpack_public_path__ + \"static/media/work_icon.c5c5641b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_work_icon.6a84f8e0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues_content\":\"Dialogues_dialogues_content__du7kf\",\"item\":\"Dialogues_item__2fnnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue_item\":\"PersonDialogue_dialogue_item__2Z1bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CloudSend_item__3zfVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3sotC\",\"error\":\"FormsControls_error__3p1eI\",\"formSummaryError\":\"FormsControls_formSummaryError__3BCwQ\",\"form_item\":\"FormsControls_form_item__16jZM\",\"remember\":\"FormsControls_remember__gsKH-\",\"rememberLable\":\"FormsControls_rememberLable__6LCTh\",\"checkbox\":\"FormsControls_checkbox__3hP9m\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    \"API-KEY\": \"2207a5d4-08e2-4a3b-98af-c3bbaf315c7d\",\r\n  },\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`, {})\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status/`, { status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n  postData: [\r\n    { id: 1, message: \"Hi, how are you?\", likes: 15 },\r\n    { id: 2, message: \"Love me\", likes: 10 },\r\n    { id: 3, message: \"Я хочу найти работу\", likes: 14 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst reducerProfile = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPost,\r\n        likes: 0,\r\n      };\r\n      return Object.assign({}, state, {\r\n        postData: state.postData.concat(newPost),\r\n        newPostText: \"\",\r\n      });\r\n    case SET_USER_PROFILE:\r\n      return Object.assign({}, state, { profile: action.profile });\r\n    case SET_STATUS:\r\n      return Object.assign({}, state, { status: action.status });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPost) => {\r\n  return {\r\n    type: ADD_POST,\r\n    newPost,\r\n  };\r\n};\r\n\r\nexport const setStatusAC = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n  };\r\n};\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n  profileAPI.getProfile(userId).then((response) => {\r\n    dispatch(setUserProfile(response.data));\r\n  });\r\n};\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n  profileAPI.getStatus(userId).then((response) => {\r\n    dispatch(setStatusAC(response.data));\r\n  });\r\n};\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n  profileAPI.updateStatus(status).then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setStatusAC(status));\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducerProfile;\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n  userArr: [\r\n    { id: 1, name: \"Nastya\" },\r\n    { id: 2, name: \"Sergey\" },\r\n    { id: 3, name: \"Sanya\" },\r\n    { id: 4, name: \"Fedos\" },\r\n    { id: 5, name: \"Valera\" },\r\n  ],\r\n  messageArr: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"I'm fine\" },\r\n    { id: 4, message: \"Go home\" },\r\n    { id: 5, message: \"I go\" },\r\n  ],\r\n};\r\n\r\nconst reducerDialogues = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let newNewMessage = {\r\n        id: 6,\r\n        message: action.newMessage,\r\n      };\r\n      return Object.assign({}, state, {\r\n        messageArr: state.messageArr.concat(newNewMessage),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageActionCreator = (newMessage) => {\r\n  return { type: SEND_MESSAGE, newMessage };\r\n};\r\n\r\nexport default reducerDialogues;\r\n","let initialState = {\r\n  arrayBest: [\r\n    { id: 1, name: \"Nastya\" },\r\n    { id: 2, name: \"Sergey\" },\r\n    { id: 3, name: \"Sanya\" },\r\n  ],\r\n  allFriend: [\r\n    { id: 1, name: \"Nastya\" },\r\n    { id: 2, name: \"Sergey\" },\r\n    { id: 3, name: \"Sanya\" },\r\n    { id: 4, name: \"Fedos\" },\r\n    { id: 5, name: \"Valera\" },\r\n    { id: 6, name: \"Marina\" },\r\n    { id: 7, name: \"Vasya\" },\r\n    { id: 8, name: \"Ira\" },\r\n    { id: 9, name: \"Inna\" },\r\n    { id: 10, name: \"Kirill\" },\r\n  ],\r\n};\r\n\r\nconst reduerFriends = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default reduerFriends;\r\n","import { userAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst reducerUsers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: true };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: false };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const followSuccess = (userId) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const unfollowSuccess = (userId) => {\r\n  return { type: UNFOLLOW, userId };\r\n};\r\nexport const setUsers = (users) => {\r\n  return { type: SET_USERS, users };\r\n};\r\nexport const setIsFetching = (isFetching) => {\r\n  return { type: TOGGLE_IS_FETCHING, isFetching };\r\n};\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n  return (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n\r\n    userAPI.getUsers(currentPage, pageSize).then((data) => {\r\n      dispatch(setIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n    });\r\n  };\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    userAPI.follow(userId).then((response) => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(followSuccess(userId));\r\n      }\r\n      dispatch(toggleIsFollowingProgress(false, userId));\r\n    });\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    userAPI.unfollow(userId).then((response) => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n      }\r\n      dispatch(toggleIsFollowingProgress(false, userId));\r\n    });\r\n  };\r\n};\r\n\r\nexport default reducerUsers;\r\n","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  data: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n return authAPI.me().then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      let { id, email, login } = response.data.data;\r\n      dispatch(setUserData(id, email, login, true));\r\n    }\r\n  });\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n  authAPI.login(email, password, rememberMe).then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData());\r\n    } else {\r\n      let message =\r\n        response.data.messages.length > 0\r\n          ? response.data.messages[0]\r\n          : \"Some error\";\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  authAPI.logout().then((response) => {\r\n  \r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setUserData(null, null, null, false));\r\n    }\r\n  });\r\n};\r\n\r\nexport default authReducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport reducerProfile from \"./profile_reducer\";\r\nimport reducerDialogues from \"./dialogues_reducer\";\r\nimport reducerFriends from \"./friends_reducer\";\r\nimport reducerUsers from \"./users_reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: reducerProfile,\r\n  dialoguesPage: reducerDialogues,\r\n  friendPage: reducerFriends,\r\n  usersPage: reducerUsers,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={style.header}>\r\n      <img src=\"https://yt3.ggpht.com/a/AATXAJwjqeBPBlUFN7PkmC6KsliyjFJ9tnva3eaSGxnrlQ=s900-c-k-c0xffffffff-no-rj-mo\" alt=\"\" />\r\n\r\n      <div className={style.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {\" \"}\r\n            {props.login} - <button onClick={props.logout}>Logout</button>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport style from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import SidebarFriends from \"./SidebarFriends/SidebarFriends\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={style.navbar}>\r\n      <span className={style.item}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/profile\">\r\n          Profile\r\n        </NavLink>\r\n      </span>\r\n      <span className={style.item}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/dialogues\">\r\n          Messages\r\n        </NavLink>\r\n      </span>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/news\">\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/music\">\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/setting\">\r\n          Setting\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/friends\">\r\n          Friends\r\n        </NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/users\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport classProfile from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={classProfile.item}>\r\n      <div className={classProfile.message}>\r\n        <img\r\n          src=\"https://www.freeiconspng.com/uploads/man-icon-png-29.png\"\r\n          alt=\"\"\r\n        />\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <hr />\r\n      <div className={classProfile.like}>\r\n        <span>like {props.like}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export const requiredField = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCretor = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport style from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n  const showError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (showError ? style.error : \"\")}>\r\n      <div>{props.children}</div>\r\n      {showError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classProfile from \"./MyPosts.module.css\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCretor(30);\r\n\r\nlet NewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classProfile.add_news}>\r\n      <Field\r\n        validate={[requiredField, maxLength30]}\r\n        name=\"newPost\"\r\n        component={Textarea}\r\n        placeholder=\"Your news\"\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"post\" })(NewPostForm);\r\n","import React from \"react\";\r\nimport classProfile from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPostForm from \"./NewPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElem = props.postData.map((post) => (\r\n    <Post message={post.message} like={post.likes} id={post.id} key={post.id} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={classProfile.my_posts}>\r\n      <div className=\"header_posts\">\r\n        <h4>My Posts</h4>\r\n      </div>\r\n      <NewPostForm onSubmit={onAddPost} />\r\n      <div className={classProfile.added_news}>{postsElem}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostTextChange: state.profilePage.newPostText,\r\n    postData: state.profilePage.postData,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost));\r\n    },\r\n  };\r\n};\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/img/Loading-circles-acs-rectangles.webp\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\n\r\nconst Preloader=()=>{\r\n    return(\r\n        <div className={style.item}>\r\n        <img alt=\"loader\" src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  const activeteEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactiveteEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activeteEditMode}>\r\n            {props.status || \"-------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onBlur={deactiveteEditMode}\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"./../../../assets/img/user-avatar.png\";\r\n// import ProfileStatus from \"./ProfileStatus\";\r\nimport workLogo from \"../../../assets/img/work_icon.svg\";\r\nimport searchWorkLogo from \"../../../assets/img/no_work_icon.svg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return (\r\n      <div className={style.preloader}>\r\n        <Preloader />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style.photo}>\r\n        <img\r\n          src={\r\n            props.profile.photos.large !== null\r\n              ? props.profile.photos.large\r\n              : userPhoto\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      <div className={style.info}>\r\n        <h3>Information</h3>\r\n        <p>Full Name: {props.profile.fullName}</p>\r\n        <p>Facebook: {props.profile.contacts.facebook}</p>\r\n        <p>\r\n          Job:\r\n          {props.profile.lookingForAJob ? (\r\n            <img src={workLogo} alt=\"Есть работа\" />\r\n          ) : (\r\n            <img src={searchWorkLogo} alt=\"Нет работы\" />\r\n          )}\r\n        </p>\r\n        <p>{props.profile.lookingForAJobDescription}</p>\r\n        <p>Status: {props.profile.aboutMe}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classProfile from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classProfile.content}>\r\n      <img\r\n        src=\"https://avatars.mds.yandex.net/get-pdb/1516664/09249b5a-9f96-419d-8d26-14d33b095ec2/s1200\"\r\n        alt=\"\"\r\n      />\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Container {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport classProfile from \"./Profile.module.css\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile } from \"../../Redux/profile_reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus, updateStatus } from \"./../../Redux/profile_reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId=this.props.userId\r\n      if(!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classProfile.content}>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\n// import style from \"./Setting.module.css\"\r\n\r\nconst Setting = ()=>{\r\n    return(\r\n        <div>\r\n            <h1>Setting</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from \"react\";\r\n// import style from \"./Music.module.css\";\r\n\r\nconst Music = (props) =>{\r\n    return(\r\n        <div>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\n// import style from \"./News.module.css\";\r\n\r\nconst News = (props)=>{\r\n    return(\r\n        <div>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport userPhoto from \"../../assets/img/user-avatar.png\";\r\nimport style from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet UsersPresent = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      {props.users.map((user) => (\r\n        <div className={style.user} key={user.id}>\r\n          <div className={style.info}>\r\n            <NavLink to={`/profile/` + user.id}>\r\n              <img\r\n                src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                alt=\"\"\r\n              />\r\n            </NavLink>\r\n            <div>\r\n              <span>\r\n                <div>\r\n                  <div>{user.name}</div>\r\n                  <div>{\"user.surname\"}</div>\r\n                </div>\r\n                <div>{user.status}</div>\r\n              </span>\r\n              <span>\r\n                <div>{\"user.location.city\"}</div>\r\n                <div>{\"user.location.country\"}</div>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.buttons}>\r\n            {user.followed ? (\r\n              <button\r\n                disabled={props.followingInProgress.some(\r\n                  (id) => id === user.id\r\n                )}\r\n                onClick={() => {\r\n                  props.unfollow(user.id);\r\n                }}\r\n              >\r\n                Unollow\r\n              </button>\r\n            ) : (\r\n              <button\r\n                disabled={props.followingInProgress.some(\r\n                  (id) => id === user.id\r\n                )}\r\n                onClick={() => {\r\n                  props.follow(user.id);\r\n                }}\r\n              >\r\n                Follow\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPresent;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={style.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button className={style.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          prev\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [style.selectedPage]: currentPage === p,\r\n                },\r\n                style.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChange(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button className={style.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          next\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users)=>{\r\n  return users.filter((u) => true);\r\n});\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n","import React from \"react\";\r\nimport UserPresent from \"./UserPresent\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  getUsersThunk,\r\n} from \"../../Redux/users_reduser\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  // getUsersSuperSelector,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n    this.props.setCurrentPage(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paginator\r\n          totalItemsCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChange={this.onPageChanged}\r\n        />\r\n        {this.props.isFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <UserPresent\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            onPageChanged={this.onPageChanged}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//   return {\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     followingInProgress: state.usersPage.followingInProgress,\r\n//     isFetching: state.usersPage.isFetching,\r\n//   };\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    // users:getUsersSuperSelector(state),\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    isFetching: getIsFetching(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    getUsers: getUsersThunk,\r\n  })\r\n)(UsersAPIComponent);\r\n","import React from \"react\";\r\nimport style from \"./DialogueItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogueItem = props => {\r\n  return (\r\n    <div className={style.item}>\r\n      <NavLink activeClassName={style.active} to={\"/dialogues/\" + props.id}>\r\n      <img src=\"https://redcdn.net/topicit/images/no-avatar-1.png\" alt=\"\" />\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueItem;\r\n","import React from \"react\";\r\nimport style from \"./PersonDialogue.module.css\";\r\nimport DialogueItem from \"./DialogueItem/DialogueItem\";\r\n\r\nconst PersonDialogue = (props) => {\r\n  let dialoguesElem = props.userArr.map(user => (\r\n    <DialogueItem name={user.name} id={user.id} key = {user.id} />\r\n  ));\r\n  return <div className={style.dialogue_item}>{dialoguesElem}</div>;\r\n};\r\nexport default PersonDialogue;\r\n","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nconst Message = props => {\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.name_photo}>\r\n        <img src=\"https://redcdn.net/topicit/images/no-avatar-1.png\" alt=\"\" />\r\n        <p>{props.name}</p>\r\n      </div>\r\n      <div className={style.message}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport style from \"./CloudSend.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCretor(100);\r\n\r\nconst CloudSend = (props) => {\r\n  let newMessageText = props.newMessageText;\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={style.item}>\r\n      <Field\r\n        name=\"newMessage\"\r\n        validate={[requiredField, maxLength100]}\r\n        component={Textarea}\r\n        value={newMessageText}\r\n        placeholder=\"Введите ваше сообщение\"\r\n      ></Field>\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"message\" })(CloudSend);\r\n","import React from \"react\";\r\nimport { sendMessageActionCreator } from \"../../../../Redux/dialogues_reducer\";\r\nimport CloudSend from \"./CloudSendForm\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CloudSendContainer = (props) => {\r\n  let newMessage = (values) => {\r\n    props.sendMessage(values.newMessage);\r\n  };\r\n  return <CloudSend onSubmit={newMessage} />;\r\n};\r\n\r\nlet mapNewMessageText = (state) => {\r\n  return {\r\n    newMessageText: state.dialoguesPage.newMessageText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(sendMessageActionCreator(newMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapNewMessageText, mapDispatchToProps)(CloudSendContainer);\r\n","import React from \"react\";\r\nimport style from \"./PrivateDialogues.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport CloudSendContainer from \"./СloudSend/CloudSendContainer\";\r\n\r\nconst PrivateDialogues = (props) => {\r\n\r\n  let messageElem = props.messageArr.map((message) => (\r\n    <Message name={\"Nastya\"} message={message.message} id = {message.id} key = {message.id} />\r\n  ));\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.messages}>{messageElem}</div>\r\n      <CloudSendContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateDialogues;\r\n","import React from \"react\";\r\nimport style from \"./Dialogues.module.css\";\r\nimport PersonDialogue from \"./PersonDialogue/PersonDialogue\";\r\nimport PrivateDialogues from \"./PrivateDialogues/PrivateDialogues\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dialogues = (props) => {\r\n  if (!props.isAuth) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  const { userArr, messageArr } = props.dialoguesPage;\r\n  return (\r\n    <div className={style.dialogues_content}>\r\n      <PersonDialogue userArr={userArr} />\r\n      <PrivateDialogues messageArr={messageArr} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogues;\r\n","import Dialogues from \"./Dialogues\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialoguesPage: state.dialoguesPage,\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(Dialogues);\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength20 = maxLengthCretor(20);\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form className={style.form_item} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          validate={[requiredField, maxLength20]}\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          component={Input}\r\n          validate={[requiredField]}\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n        />\r\n      </div>\r\n      <div className={style.remember}>\r\n       <div className={style.rememberLable}> <label  htmlFor=\"rememberMe\">remember me </label></div>\r\n        <div className={style.checkbox}>\r\n          <Field\r\n            id=\"rememberMe\"\r\n            component={Input}\r\n            name=\"rememberMe\"\r\n            type=\"checkbox\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {props.error && (\r\n        <div className={style.formSummaryError}>{props.error}</div>\r\n      )}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"login\" })(LoginForm);\r\n","import React from \"react\";\r\nimport ReduxLoginForm from \"./LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"./Login.module.css\";\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email,  formData.password,  formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.form}>\r\n      <h3>Login</h3>\r\n      <ReduxLoginForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport { login } from \"../../Redux/auth-reducer\";\r\nimport React from \"react\";\r\n\r\nconst LoginContainer = (props) => {\r\n  return <Login isAuth={props.isAuth} login={props.login} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginContainer);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport { Route, withRouter, Redirect } from \"react-router-dom\";\r\nimport Setting from \"./components/Setting/Setting\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\n// import Friends from \"./components/Friends/Friends\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport DialoguesConnected from \"./components/Dialogues/DialoguesContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path=\"/\" render={() => <Redirect to={\"/login\"} />} />\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/dialogues\" render={() => <DialoguesConnected />} />\r\n          <Route path=\"/music\" render={() => <Music />} />\r\n          <Route path=\"/news\" render={() => <News />} />\r\n          <Route path=\"/setting\" render={() => <Setting />} />\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          {/* <Route\r\n            path=\"/friends\"\r\n            // render={() => (\r\n            //   <Friends allFriend={this.props.state.friendPage.allFriend} />\r\n            )}\r\n          /> */}\r\n          <Route path=\"/login\" render={() => <LoginContainer />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App);","import \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./Redux/redux-store\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__N5JHp\",\"pageNumber\":\"Paginator_pageNumber__1Z0_N\",\"selectedPage\":\"Paginator_selectedPage__4e46b\",\"button\":\"Paginator_button__6n5Qv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__2RunZ\",\"add_news\":\"MyPosts_add_news__2gZv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__10svT\",\"info\":\"ProfileInfo_info__3U8dc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__3kEc8\",\"selectedPage\":\"Users_selectedPage__EDVV3\",\"user\":\"Users_user__K7ZgD\",\"info\":\"Users_info__2aAeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__bR3gc\"};","module.exports = __webpack_public_path__ + \"static/media/user-avatar.09001408.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1MTGV\",\"message\":\"Post_message__3Ix7v\",\"like\":\"Post_like__18q8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__2ezuA\",\"name_photo\":\"Message_name_photo__1RqyE\",\"message\":\"Message_message__1OzXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__4J0zQ\",\"item\":\"Navbar_item__EaxNm\",\"itemDisabled\":\"Navbar_itemDisabled__3OlD9\",\"activeLink\":\"Navbar_activeLink__1hzQr\",\"navLink\":\"Navbar_navLink__1Cztt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3yZoK\",\"loginBlock\":\"Header_loginBlock__3gRxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue_item\":\"DialogueItem_dialogue_item__BsJ3a\",\"item\":\"DialogueItem_item__Fk3of\",\"active\":\"DialogueItem_active__20Cdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PrivateDialogues_item__2Iir5\",\"messages\":\"PrivateDialogues_messages__RK4uv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Login_item__AUJW1\",\"form\":\"Login_form__1a6iE\"};"],"sourceRoot":""}