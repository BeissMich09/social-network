{"version":3,"sources":["assets/img/Loading-circles-acs-rectangles.webp","components/common/Preloader/Preloader.module.css","assets/img/work_icon.svg","assets/img/no_work_icon.svg","components/Dialogues/Dialogues.module.css","components/Dialogues/PersonDialogue/PersonDialogue.module.css","components/Dialogues/PrivateDialogues/СloudSend/CloudSend.module.css","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","api/api.js","Redux/profile_reducer.js","Redux/dialogues_reducer.js","Redux/friends_reducer.js","utils/object-helpers.js","Redux/users_reduser.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.jsx","components/Profile/ProfileContainer.jsx","components/Setting/Setting.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Users/User.jsx","components/Users/UserPresent.jsx","components/common/Paginator/Paginator.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Dialogues/PersonDialogue/DialogueItem/DialogueItem.jsx","components/Dialogues/PersonDialogue/PersonDialogue.jsx","components/Dialogues/PrivateDialogues/Message/Message.jsx","components/Dialogues/PrivateDialogues/СloudSend/CloudSendForm.jsx","components/Dialogues/PrivateDialogues/СloudSend/CloudSendContainer.jsx","components/Dialogues/PrivateDialogues/PrivateDialogues.jsx","components/Dialogues/Dialogues.jsx","components/Dialogues/DialoguesContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","index.js","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","assets/img/user-avatar.png","components/Profile/MyPosts/Post/Post.module.css","components/Dialogues/PrivateDialogues/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Dialogues/PersonDialogue/DialogueItem/DialogueItem.module.css","components/Dialogues/PrivateDialogues/PrivateDialogues.module.css","components/Login/Login.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","status","put","authAPI","email","password","rememberMe","initialState","postData","id","message","likes","profile","setStatusAC","type","reducerProfile","state","action","newPost","Object","assign","concat","newPostText","filter","p","postId","userArr","name","messageArr","reducerDialogues","newNewMessage","newMessage","arrayBest","allFriend","reduerFriends","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","reducerUsers","followed","login","isAuth","setUserData","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialoguesPage","friendPage","reducerFriends","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","style","header","src","alt","loginBlock","onClick","logout","to","HeaderContainer","this","React","Component","connect","Navbar","navbar","item","navLink","activeClassName","activeLink","itemDisabled","Post","classProfile","like","requiredField","value","maxLengthCretor","maxLength","length","FormControl","input","meta","touched","error","children","showError","formControl","Textarea","restProps","Input","createField","placeholder","validators","component","Field","validate","maxLength30","reduxForm","onSubmit","handleSubmit","add_news","MyPosts","memo","console","log","postsElem","key","my_posts","values","addPost","added_news","MyPostsContainer","newPostTextChange","addPostActionCreator","Preloader","preloader","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","ProfileInfo","photo","photos","large","userPhoto","info","fullName","contacts","facebook","lookingForAJob","workLogo","searchWorkLogo","lookingForAJobDescription","aboutMe","Profile","content","mapStateToPropsForRedirect","withAuthRedirect","Container","RedirectComponent","ProfileContainer","params","history","push","getUserProfile","getStatus","compose","withRouter","Setting","Music","News","User","user","small","buttons","disabled","some","UsersPresent","Paginator","totalItemsCount","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","button","cn","selectedPage","pageNumber","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","UsersAPIComponent","onPageChanged","setCurrentPage","UserPresent","bind","totalCount","DialogueItem","active","PersonDialogue","dialoguesElem","dialogue_item","Message","name_photo","maxLength100","newMessageText","sendMessage","sendMessageActionCreator","PrivateDialogues","messageElem","messages","Dialogues","dialogues_content","maxLength20","form_item","remember","rememberLable","htmlFor","checkbox","formSummaryError","Login","formData","stopSubmit","_error","App","initializeApp","path","render","UsersContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,6D,oBCC3CD,EAAOC,QAAU,CAAC,KAAO,0B,oBCDzBD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCC3CD,EAAOC,QAAU,CAAC,kBAAoB,qCAAqC,KAAO,0B,oBCAlFD,EAAOC,QAAU,CAAC,cAAgB,wC,oBCAlCD,EAAOC,QAAU,CAAC,KAAO,0B,+ECAzBD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,UAAY,iCAAiC,SAAW,gCAAgC,cAAgB,qCAAqC,SAAW,kC,8CCWvSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4CChBAC,E,OAAWC,OAAa,CAC5BC,iBAAiB,EACjBC,QAAQ,gDACRC,QAAS,CACP,UAAW,0CAIFC,EAAU,CACrBC,SADqB,WACqB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACnC,OAAOR,EACJS,IADI,qBACcF,EADd,kBACmCC,GAAY,IACnDE,MAAK,SAACC,GACL,OAAOA,EAASC,SAGtBC,OARqB,SAQdC,GACL,OAAOd,EAASe,KAAT,iBAAwBD,KAEjCE,SAXqB,SAWZF,GACP,OAAOd,EAASiB,OAAT,iBAA0BH,MAIxBI,EAAa,SACbJ,GACT,OAAOd,EAASS,IAAI,WAAaK,IAFxBI,EAAa,SAIdJ,GACR,OAAOd,EAASS,IAAI,kBAAoBK,IAL/BI,EAAa,SAOXC,GACX,OAAOnB,EAASoB,IAAT,kBAAgC,CAAED,YAIhCE,EAAU,WAEnB,OAAOrB,EAASS,IAAT,YAFEY,EAAU,SAIfC,EAAOC,GAA+B,IAArBC,EAAoB,wDACzC,OAAOxB,EAASe,KAAT,aAA4B,CAAEO,QAAOC,WAAUC,gBAL7CH,EAAU,WAQnB,OAAOrB,EAASiB,OAAT,eCvCPQ,EAAe,CACjBC,SAAU,CACR,CAAEC,GAAI,EAAGC,QAAS,mBAAoBC,MAAO,IAC7C,CAAEF,GAAI,EAAGC,QAAS,UAAWC,MAAO,IACpC,CAAEF,GAAI,EAAGC,QAAS,sGAAuBC,MAAO,KAElDC,QAAS,KACTX,OAAQ,IA2CGY,EAAc,SAACZ,GAC1B,MAAO,CACLa,KAvDe,aAwDfb,WA4BWc,EAvEQ,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCACvD,OAAQA,EAAOH,MACb,IAjBa,WAkBX,IAAII,EAAU,CACZT,GAAI,EACJC,QAASO,EAAOC,QAChBP,MAAO,GAET,OAAOQ,OAAOC,OAAO,GAAIJ,EAAO,CAC9BR,SAAUQ,EAAMR,SAASa,OAAOH,GAChCI,YAAa,KAEjB,IA1BqB,mBA2BnB,OAAOH,OAAOC,OAAO,GAAIJ,EAAO,CAAEJ,QAASK,EAAOL,UACpD,IA3Be,aA4Bb,OAAOO,OAAOC,OAAO,GAAIJ,EAAO,CAAEf,OAAQgB,EAAOhB,SACnD,IA5BgB,cA6Bd,OAAO,eACFe,EADL,CAEER,SAAUQ,EAAMR,SAASe,QAAO,SAACC,GAAD,OAAOA,EAAEf,KAAOQ,EAAOQ,YAE3D,QACE,OAAOT,ICrCTT,EAAe,CACjBmB,QAAS,CACP,CAAEjB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,SACf,CAAElB,GAAI,EAAGkB,KAAM,SACf,CAAElB,GAAI,EAAGkB,KAAM,WAEjBC,WAAY,CACV,CAAEnB,GAAI,EAAGC,QAAS,MAClB,CAAED,GAAI,EAAGC,QAAS,gBAClB,CAAED,GAAI,EAAGC,QAAS,YAClB,CAAED,GAAI,EAAGC,QAAS,WAClB,CAAED,GAAI,EAAGC,QAAS,UAuBPmB,EAnBU,WAAmC,IAAlCb,EAAiC,uDAAzBT,EAAcU,EAAW,uCACzD,OAAQA,EAAOH,MACb,IArBiB,eAsBf,IAAIgB,EAAgB,CAClBrB,GAAI,EACJC,QAASO,EAAOc,YAElB,OAAOZ,OAAOC,OAAO,GAAIJ,EAAO,CAC9BY,WAAYZ,EAAMY,WAAWP,OAAOS,KAExC,QACE,OAAOd,IC9BTT,EAAe,CACjByB,UAAW,CACT,CAAEvB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,UAEjBM,UAAW,CACT,CAAExB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,SACf,CAAElB,GAAI,EAAGkB,KAAM,SACf,CAAElB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,UACf,CAAElB,GAAI,EAAGkB,KAAM,SACf,CAAElB,GAAI,EAAGkB,KAAM,OACf,CAAElB,GAAI,EAAGkB,KAAM,QACf,CAAElB,GAAI,GAAIkB,KAAM,YAQLO,EAJO,WAAmC,IAAlClB,EAAiC,uDAAzBT,EAAyB,iCACtD,OAAOS,G,SCrBImB,EAAsB,SACjCC,EACAC,EACAC,EACAC,GAEA,OAAOH,EAAMI,KAAI,SAACC,GAChB,OAAIA,EAAEH,KAAiBD,EACd,eAAKI,EAAZ,GAAkBF,GAEbE,MCCPlC,EAAe,CACjBmC,MAAO,GACPpD,SAAU,GACVqD,gBAAiB,EACjBtD,YAAa,EACbuD,YAAY,EACZC,oBAAqB,IAkDVC,EAAgB,SAAClD,GAC5B,MAAO,CACLkB,KAlEW,SAmEXlB,WAaSmD,EAAkB,SAACnD,GAC9B,MAAO,CAAEkB,KAhFM,WAgFUlB,WAKdoD,EAAgB,SAACJ,GAC5B,MAAO,CAAE9B,KAlFgB,qBAkFU8B,eAExBK,EAA4B,SAACL,EAAYhD,GAAb,MAAyB,CAChEkB,KApFmC,+BAqFnC8B,aACAhD,WAcIsD,EAAkB,uCAAG,WACzBC,EACAvD,EACAwD,EACAC,GAJyB,SAAAC,EAAA,6DAMzBH,EAASF,GAA0B,EAAMrD,IANhB,SAOJwD,EAAUxD,GAPN,OAQQ,IARR,OAQZF,KAAK6D,YAChBJ,EAASE,EAAczD,IAEzBuD,EAASF,GAA0B,EAAOrD,IAXjB,2CAAH,4DAoCT4D,EA7HM,WAAmC,IAAlCxC,EAAiC,uDAAzBT,EAAcU,EAAW,uCACrD,OAAQA,EAAOH,MACb,IAnBW,SAoBT,OAAO,eACFE,EADL,CAEE0B,MAAOP,EAAoBnB,EAAM0B,MAAOzB,EAAOrB,OAAQ,KAAM,CAC3D6D,UAAU,MAGhB,IAzBa,WA0BX,OAAO,eACFzC,EADL,CAEE0B,MAAOP,EAAoBnB,EAAM0B,MAAOzB,EAAOrB,OAAQ,KAAM,CAC3D6D,UAAU,MAGhB,IA/Bc,YAgCZ,OAAO,eACFzC,EADL,CAEE0B,MAAOzB,EAAOyB,QAElB,IAnCqB,mBAoCnB,OAAO,eACF1B,EADL,CAEE3B,YAAa4B,EAAO5B,cAExB,IAvC0B,wBAwCxB,OAAO,eACF2B,EADL,CAEE2B,gBAAiB1B,EAAO0B,kBAE5B,IA3CuB,qBA4CrB,OAAO,eACF3B,EADL,CAEE4B,WAAY3B,EAAO2B,aAEvB,IA/CiC,+BAgD/B,OAAO,eACF5B,EADL,CAEE6B,oBAAqB5B,EAAO2B,WAAP,sBACb5B,EAAM6B,qBADO,CACc5B,EAAOrB,SACtCoB,EAAM6B,oBAAoBtB,QAAO,SAACd,GAAD,OAAQA,IAAOQ,EAAOrB,YAE/D,QACE,OAAOoB,I,QC3DTT,EAAe,CACjBX,OAAQ,KACRQ,MAAO,KACPsD,MAAO,KACPC,QAAQ,GAgBGC,EAAc,SAAChE,EAAQQ,EAAOsD,EAAOC,GAAvB,MAAmC,CAC5D7C,KAvBoB,qBAwBpBpB,KAAM,CAAEE,SAAQQ,QAAOsD,QAAOC,YAGnBE,EAAkB,yDAAM,WAAOV,GAAP,uBAAAG,EAAA,sEACdnD,IADc,OAGF,KAF7BV,EAD+B,QAGtBC,KAAK6D,aAAmB,EACR9D,EAASC,KAAKA,KAAnCe,EAD4B,EAC5BA,GAAIL,EADwB,EACxBA,MAAOsD,EADiB,EACjBA,MACjBP,EAASS,EAAYnD,EAAIL,EAAOsD,GAAO,KALN,2CAAN,uDA6BhBI,EA/CK,WAAmC,IAAlC9C,EAAiC,uDAAzBT,EAAcU,EAAW,uCACpD,OAAQA,EAAOH,MACb,IAXkB,qBAYhB,OAAO,eACFE,EADL,GAEKC,EAAOvB,MAGd,QACE,OAAOsB,I,kBCjBTT,EAAe,CACjBwD,aAAa,GA2BAC,EAxBI,WAAmC,IAAlChD,EAAiC,uDAAzBT,EAAcU,EAAW,uCACnD,OAAQA,EAAOH,MACb,IARwB,sBAStB,OAAO,eACFE,EADL,CAEE+C,aAAa,IAGjB,QACE,OAAO/C,ICPTiD,EAAWC,YAAgB,CAC7BC,YAAapD,EACbqD,cAAevC,EACfwC,WAAYC,EACZC,UAAWf,EACXgB,KAAMV,EACNW,KAAMC,IACNC,IAAKX,IAEHY,EAAQC,YAAYZ,EAAUa,YAAgBC,MAEnCH,IACflG,OAAOkG,MAAQA,E,iHCCAI,GAnBA,SAACC,GACd,OACE,4BAAQC,UAAWC,KAAMC,QACvB,yBAAKC,IAAI,uGAAuGC,IAAI,KAEpH,yBAAKJ,UAAWC,KAAMI,YACnBN,EAAMtB,OACL,6BACG,IACAsB,EAAMvB,MAFT,MAEkB,4BAAQ8B,QAASP,EAAMQ,QAAvB,UAA+C,KAGjE,kBAAC,KAAD,CAASC,GAAI,UAAb,Y,QCXJC,G,iLAEF,OAAO,kBAAC,GAAWC,KAAKX,W,GAFEY,IAAMC,WAWrBC,iBALS,SAAC/E,GAAD,MAAY,CAClC2C,OAAQ3C,EAAMwD,KAAKb,OACnBD,MAAO1C,EAAMwD,KAAKd,SAGoB,CAAE+B,OJoCpB,yDAAM,WAAOtC,GAAP,SAAAG,EAAA,sEACLnD,IADK,OAEO,IAFP,OAEbT,KAAK6D,YAChBJ,EAASS,EAAY,KAAM,KAAM,MAAM,IAHf,2CAAN,wDIpCPmC,CAAqCJ,I,mBC+BrCK,GA1CA,WACb,OACE,yBAAKd,UAAWC,KAAMc,QACpB,0BAAMf,UAAWC,KAAMe,MACrB,kBAAC,KAAD,CAAShB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,YAAzE,YAIF,0BAAMR,UAAWC,KAAMe,MACrB,kBAAC,KAAD,CAAShB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,cAAzE,aAIF,yBAAKR,UAAS,UAAKC,KAAMe,KAAX,YAAmBf,KAAMmB,eACrC,kBAAC,KAAD,CAASpB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,SAAzE,SAIF,yBAAKR,UAAS,UAAKC,KAAMe,KAAX,YAAmBf,KAAMmB,eACrC,kBAAC,KAAD,CAASpB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,UAAzE,UAIF,yBAAKR,UAAS,UAAKC,KAAMe,KAAX,YAAmBf,KAAMmB,eACrC,kBAAC,KAAD,CAASpB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,YAAzE,YAIF,yBAAKR,UAAS,UAAKC,KAAMe,KAAX,YAAmBf,KAAMmB,eACrC,kBAAC,KAAD,CAASpB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,YAAzE,YAIF,yBAAKR,UAAWC,KAAMe,MACpB,kBAAC,KAAD,CAAShB,UAAWC,KAAMgB,QAASC,gBAAiBjB,KAAMkB,WAAYX,GAAG,UAAzE,Y,4DClBOa,GAlBF,SAAAtB,GACX,OACE,yBAAKC,UAAWsB,KAAaN,MAC3B,yBAAKhB,UAAWsB,KAAa9F,SAC3B,yBACE2E,IAAI,2DACJC,IAAI,KAEN,2BAAIL,EAAMvE,UAEZ,6BACA,yBAAKwE,UAAWsB,KAAaC,MAC3B,sCAAYxB,EAAMwB,S,oBCfbC,GAAgB,SAACC,GAC5B,IAAIA,EAEJ,MAAO,qBAGIC,GAAkB,SAACC,GAAD,OAAe,SAACF,GAC7C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,6BCH1BE,GAAc,SAAC,GAAkD,EAAhDC,MAAiD,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAChDC,EAAYH,GAAWC,EAC7B,OACE,yBAAKjC,UAAWC,KAAMmC,YAAc,KAAOD,EAAYlC,KAAMgC,MAAQ,KACnE,6BAAMC,GACLC,GAAa,8BAAOF,KAKdI,GAAW,SAACtC,GAAW,IAC1B+B,EAA8B/B,EAA9B+B,MAAgBQ,GAAcvC,EAAvBgC,KADkB,aACKhC,EADL,mBAGjC,OACE,kBAAC,GAAgBA,EACf,8CAAc+B,EAAWQ,MAKlBC,GAAQ,SAACxC,GAAW,IACvB+B,EAA8B/B,EAA9B+B,MAAgBQ,GAAcvC,EAAvBgC,KADe,aACQhC,EADR,mBAE9B,OACE,kBAAC,GAAgBA,EACf,2CAAW+B,EAAWQ,MAKfE,GAAc,SACzBC,EACAhG,EACAiG,EACAC,EACA5C,GAEA,OACE,6BACE,kBAAC6C,GAAA,EAAD,eACED,UAAWA,EACXE,SAAUH,EACVjG,KAAMA,EACNgG,YAAaA,GACT1C,MCtCN+C,GAAcpB,GAAgB,IAerBqB,gBAAU,CAAExD,KAAM,QAAlBwD,EAbG,SAAChD,GACjB,OACE,0BAAMiD,SAAUjD,EAAMkD,aAAcjD,UAAWsB,KAAa4B,UAC1D,kBAACN,GAAA,EAAD,CACEC,SAAU,CAACrB,GAAesB,IAC1BrG,KAAK,UACLkG,UAAWN,GACXI,YAAY,cAEd,4CCMSU,GArBCxC,IAAMyC,MAAK,SAACrD,GAC1BsD,QAAQC,IAAI,WACZ,IAAIC,EAAYxD,EAAMzE,SAASgC,KAAI,SAAC3C,GAAD,OACjC,kBAAC,GAAD,CAAMa,QAASb,EAAKa,QAAS+F,KAAM5G,EAAKc,MAAOF,GAAIZ,EAAKY,GAAIiI,IAAK7I,EAAKY,QAOxE,OACE,yBAAKyE,UAAWsB,KAAamC,UAC3B,yBAAKzD,UAAU,gBACb,yCAEF,kBAAC,GAAD,CAAagD,SATD,SAACU,GACf3D,EAAM4D,QAAQD,EAAO1H,YASnB,yBAAKgE,UAAWsB,KAAasC,YAAaL,OCJhDF,QAAQC,IAAI,aAEZ,IAEeO,GAFQhD,cAfD,SAAC/E,GACrB,MAAO,CACLgI,kBAAmBhI,EAAMmD,YAAY7C,YACrCd,SAAUQ,EAAMmD,YAAY3D,aAGP,SAAC2C,GACxB,MAAO,CACL0F,QAAS,SAAC3H,GACRiC,EhB8B8B,SAACjC,GACnC,MAAO,CACLJ,KA3Ca,WA4CbI,WgBjCW+H,CAAqB/H,QAMb6E,CAA6CsC,I,8DCNrDa,GARC,WACZ,OACI,yBAAKhE,UAAWC,KAAMe,MACtB,yBAAKZ,IAAI,SAASD,IAAK8D,S,uECmChBC,GAzCgB,SAACnE,GAAW,IAAD,EACVoE,oBAAS,GADC,oBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAASpE,EAAMhF,QAFD,oBAEnCA,EAFmC,KAE3BuJ,EAF2B,KAIxCC,qBAAU,WACRD,EAAUvE,EAAMhF,UACf,CAACgF,EAAMhF,SAYV,OACE,8BACIqJ,GACA,6BACE,0BAAMI,cAdW,WACvBH,GAAY,KAcHtE,EAAMhF,QAAU,YAItBqJ,GACC,6BACE,2BACEK,OAnBiB,WACzBJ,GAAY,GACZtE,EAAM2E,aAAa3J,IAkBX4J,SAhBa,SAACC,GACtBN,EAAUM,EAAEC,cAAcpD,QAgBlBqD,WAAW,EACXrD,MAAO1G,OCaJgK,GAxCK,SAAChF,GACnB,OAAKA,EAAMrE,QAQT,yBAAKsE,UAAWC,KAAMvE,SACpB,yBAAKsE,UAAWC,KAAM+E,OACpB,yBACE7E,IACiC,OAA/BJ,EAAMrE,QAAQuJ,OAAOC,MACjBnF,EAAMrE,QAAQuJ,OAAOC,MACrBC,KAEN/E,IAAI,MAGR,kBAAC,GAAD,CAAwBrF,OAAQgF,EAAMhF,OAAQ2J,aAAc3E,EAAM2E,eAClE,yBAAK1E,UAAWC,KAAMmF,MACpB,2CACA,yCAAerF,EAAMrE,QAAQ2J,UAC7B,wCAActF,EAAMrE,QAAQ4J,SAASC,UACrC,kCAEGxF,EAAMrE,QAAQ8J,eACb,yBAAKrF,IAAKsF,KAAUrF,IAAI,kEAExB,yBAAKD,IAAKuF,KAAgBtF,IAAI,6DAGlC,2BAAIL,EAAMrE,QAAQiK,2BAClB,sCAAY5F,EAAMrE,QAAQkK,WA/B5B,yBAAK5F,UAAWC,KAAMgE,WACpB,kBAAC,GAAD,QCUO4B,GAjBC,SAAC9F,GACf,OACE,yBAAKC,UAAWsB,KAAawE,SAC3B,yBACE3F,IAAI,4FACJC,IAAI,KAEN,kBAAC,GAAD,CACE1E,QAASqE,EAAMrE,QACfX,OAAQgF,EAAMhF,OACd2J,aAAc3E,EAAM2E,eAEtB,kBAAC,GAAD,Q,SCbFqB,GAA6B,SAACjK,GAAD,MAAY,CAC3C2C,OAAQ3C,EAAMwD,KAAKb,SAGRuH,GAAmB,SAACC,GAAe,IACxCC,EADuC,iLAGzC,OAAKxF,KAAKX,MAAMtB,OAGT,kBAACwH,EAAcvF,KAAKX,OAFlB,kBAAC,KAAD,CAAUS,GAAG,eAJmB,GACbG,IAAMC,WAatC,OAJqCC,aAAQkF,GAARlF,CACnCqF,ICTEC,G,4LAEF,IAAIzL,EAASgG,KAAKX,MAAMpG,MAAMyM,OAAO1L,OAChCA,IACHA,EAAOgG,KAAKX,MAAMrF,SAEhBgG,KAAKX,MAAMsG,QAAQC,KAAK,UAG5B5F,KAAKX,MAAMwG,eAAe7L,GAC1BgG,KAAKX,MAAMyG,UAAU9L,K,+BAIrB,OACE,yBAAKsF,UAAWsB,KAAawE,SAC3B,kBAAC,GAAD,iBACMpF,KAAKX,MADX,CAEErE,QAASgF,KAAKX,MAAMrE,QACpBX,OAAQ2F,KAAKX,MAAMhF,OACnB2J,aAAchE,KAAKX,MAAM2E,qB,GApBJ/D,IAAMC,WAkCtB6F,eACb5F,cARoB,SAAC/E,GAAD,MAAY,CAChCJ,QAASI,EAAMmD,YAAYvD,QAC3BX,OAAQe,EAAMmD,YAAYlE,OAC1BL,OAAQoB,EAAMwD,KAAK5E,OACnB+D,OAAQ3C,EAAMwD,KAAKb,UAIM,CAAE8H,etB0BC,SAAC7L,GAAD,8CAAY,WAAOuD,GAAP,eAAAG,EAAA,sEACnBtD,EAAsBJ,GADH,OACpCH,EADoC,OAExC0D,EARO,CACLrC,KA/DqB,mBAgErBF,QAMsBnB,EAASC,OAFO,2CAAZ,uDsB1BegM,UtB+BpB,SAAC9L,GAAD,8CAAY,WAAOuD,GAAP,eAAAG,EAAA,sEACdtD,EAAqBJ,GADP,OAC/BH,EAD+B,OAEnC0D,EAAStC,EAAYpB,EAASC,OAFK,2CAAZ,uDsB/B+BkK,atBoC5B,SAAC3J,GAAD,8CAAY,WAAOkD,GAAP,SAAAG,EAAA,sEACjBtD,EAAwBC,GADP,OAEL,IAFK,OAEzBP,KAAK6D,YAChBJ,EAAStC,EAAYZ,IAHe,2CAAZ,yDsBnC1B2L,KACAV,GAHaS,CAIbN,ICrCaQ,GARC,WACZ,OACI,6BACI,yCCMGC,GATD,SAAC7G,GACX,OACI,6BACI,uCCKG8G,GARF,SAAC9G,GACV,OACI,6BACI,sC,oBCgDG+G,GAjDJ,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMpJ,EAA4C,EAA5CA,oBAAqB/C,EAAuB,EAAvBA,SAAUH,EAAa,EAAbA,OACjD,OACE,yBAAKuF,UAAWC,KAAM8G,MACpB,yBAAK/G,UAAWC,KAAMmF,MACpB,kBAAC,KAAD,CAAS5E,GAAI,YAAcuG,EAAKxL,IAC9B,yBACE4E,IAA2B,OAAtB4G,EAAK9B,OAAO+B,MAAiBD,EAAK9B,OAAO+B,MAAQ7B,KACtD/E,IAAI,MAGR,6BACE,8BACE,6BACE,6BAAM2G,EAAKtK,MACX,6BAAM,iBAER,6BAAMsK,EAAKhM,SAEb,8BACE,6BAAM,sBACN,6BAAM,4BAKZ,yBAAKiF,UAAWC,KAAMgH,SACnBF,EAAKxI,SACJ,4BACE2I,SAAUvJ,EAAoBwJ,MAAK,SAAC5L,GAAD,OAAQA,IAAOwL,EAAKxL,MACvD+E,QAAS,WACP1F,EAASmM,EAAKxL,MAHlB,WASA,4BACE2L,SAAUvJ,EAAoBwJ,MAAK,SAAC5L,GAAD,OAAQA,IAAOwL,EAAKxL,MACvD+E,QAAS,WACP7F,EAAOsM,EAAKxL,MAHhB,aCrBK6L,GAhBI,SAACrH,GAClB,OACE,yBAAKC,UAAWC,KAAMe,MACnBjB,EAAMvC,MAAMF,KAAI,SAACyJ,GAAD,OACf,kBAAC,GAAD,CACEA,KAAMA,EACNvD,IAAKuD,EAAKxL,GACVd,OAAQsF,EAAMtF,OACdG,SAAUmF,EAAMnF,SAChB+C,oBAAqBoC,EAAMpC,2B,kDCwDtB0J,GAjEC,SAAC,GAUf,IAJK,IALLC,EAKI,EALJA,gBACAlN,EAII,EAJJA,SACAD,EAGI,EAHJA,YACAoN,EAEI,EAFJA,aAEI,IADJC,mBACI,MADU,GACV,EACAC,EAAaC,KAAKC,KAAKL,EAAkBlN,GAEzCwN,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAMtB,KAAKuB,GAGb,IAAIC,EAAeJ,KAAKC,KAAKF,EAAaD,GARtC,EASoCrD,mBAAS,GAT7C,oBASC4D,EATD,KASgBC,EAThB,KAUAC,GAAyBF,EAAgB,GAAKP,EAAc,EAC5DU,EAAyBH,EAAgBP,EAE7C,OACE,yBAAKxH,UAAWC,KAAMkI,WACnBJ,EAAgB,GACf,4BAAQ/H,UAAWC,KAAMmI,OACvB9H,QAAS,WACP0H,EAAiBD,EAAgB,KAFrC,QAQDH,EACEvL,QACC,SAACC,GAAD,OAAOA,GAAK2L,GAAyB3L,GAAK4L,KAE3C5K,KAAI,SAAChB,GACJ,OACE,0BACE0D,UAAWqI,KAAG,gBAETpI,KAAMqI,aAAenO,IAAgBmC,GAExC2D,KAAMsI,YAER/E,IAAKlH,EACLgE,QAAS,SAACsE,GACR2C,EAAajL,KAGdA,MAIRwL,EAAeC,GACd,4BAAQ/H,UAAWC,KAAMmI,OACvB9H,QAAS,WACP0H,EAAiBD,EAAgB,KAFrC,U,UCnDK7N,GAAWsO,cAJQ,SAAC1M,GAC/B,OAAOA,EAAMuD,UAAU7B,SAGgC,SAACA,GACxD,OAAOA,EAAMnB,QAAO,SAACkB,GAAD,OAAO,QAIhBkL,GAAc,SAAC3M,GAC1B,OAAOA,EAAMuD,UAAUjF,UAEZsO,GAAqB,SAAC5M,GACjC,OAAOA,EAAMuD,UAAU5B,iBAEZkL,GAAiB,SAAC7M,GAC7B,OAAOA,EAAMuD,UAAUlF,aAEZyO,GAAyB,SAAC9M,GACrC,OAAOA,EAAMuD,UAAU1B,qBAEZkL,GAAgB,SAAC/M,GAC5B,OAAOA,EAAMuD,UAAU3B,YCFnBoL,G,2MAMJC,cAAgB,SAACR,GAAgB,IAAD,EACiB,EAAKxI,MAA5C3F,EADsB,EACtBA,SAAUF,EADY,EACZA,SAAU8O,EADE,EACFA,eAC5B9O,EAASqO,EAAYnO,GACrB4O,EAAeT,I,mFARI,IAAD,EACgB7H,KAAKX,MAA/B5F,EADU,EACVA,YAAaC,EADH,EACGA,SACrBsG,KAAKX,MAAM7F,SAASC,EAAaC,K,+BAUjC,OACE,oCACE,kBAAC,GAAD,CACEkN,gBAAiB5G,KAAKX,MAAMtC,gBAC5BrD,SAAUsG,KAAKX,MAAM3F,SACrBD,YAAauG,KAAKX,MAAM5F,YACxBoN,aAAc7G,KAAKqI,gBAEpBrI,KAAKX,MAAMrC,WACV,kBAAC,GAAD,MAEA,kBAACuL,GAAD,CACExL,gBAAiBiD,KAAKX,MAAMtC,gBAC5BsL,cAAerI,KAAKqI,cACpB3O,SAAUsG,KAAKX,MAAM3F,SACrBD,YAAauG,KAAKX,MAAM5F,YACxBqD,MAAOkD,KAAKX,MAAMvC,MAClB/C,OAAQiG,KAAKX,MAAMtF,OACnBG,SAAU8F,KAAKX,MAAMnF,SACrB+C,oBAAqB+C,KAAKX,MAAMpC,2B,GAhCZgD,IAAMC,WAmDvB6F,eACbT,GACAnF,cAboB,SAAC/E,GACrB,MAAO,CACL0B,MAAOtD,GAAS4B,GAChB1B,SAAUqO,GAAY3M,GACtB2B,gBAAiBiL,GAAmB5M,GACpC3B,YAAawO,GAAe7M,GAC5B6B,oBAAqBiL,GAAuB9M,GAC5C4B,WAAYmL,GAAc/M,MAMH,CACvBrB,O1B+CkB,SAACC,GACrB,8CAAO,WAAOuD,GAAP,SAAAG,EAAA,sDACLJ,EACEC,EACAvD,EACAT,EAAQQ,OAAOyO,KAAKjP,GACpB2D,GALG,2CAAP,mDAAM,I0B/CJhD,S1ByDoB,SAACF,GACvB,8CAAO,WAAOuD,GAAP,SAAAG,EAAA,sDACLJ,EACEC,EACAvD,EACAT,EAAQW,SAASsO,KAAKjP,GACtB4D,GALG,2CAAP,mDAAM,I0BzDJmL,e1BC0B,SAAC7O,GAAD,MAAkB,CAC9CyB,KA1EuB,mBA2EvBzB,gB0BFED,S1BmByB,SAACC,EAAaC,GACzC,8CAAO,WAAO6D,GAAP,eAAAG,EAAA,6DACLH,EAASH,GAAc,IADlB,SAGY7D,EAAQC,SAASC,EAAaC,GAH1C,OAGDI,EAHC,OAILyD,EAASH,GAAc,IACvBG,EAjBK,CAAErC,KAlFO,YAkFU4B,MAiBNhD,EAAK0C,QACvBe,EA/BoD,CACtDrC,KApE4B,wBAqE5B6B,gBA6B8BjD,EAAK2O,aAN5B,2CAAP,mDAAM,M0B1BO1C,CAQbqC,I,8DClEaM,GAXM,SAAArJ,GACnB,OACE,yBAAKC,UAAWC,KAAMe,MACpB,kBAAC,KAAD,CAASE,gBAAiBjB,KAAMoJ,OAAQ7I,GAAI,cAAgBT,EAAMxE,IAClE,yBAAK4E,IAAI,oDAAoDC,IAAI,KAC9DL,EAAMtD,QCCA6M,GANQ,SAACvJ,GACtB,IAAIwJ,EAAgBxJ,EAAMvD,QAAQc,KAAI,SAAAyJ,GAAI,OACxC,kBAAC,GAAD,CAActK,KAAMsK,EAAKtK,KAAMlB,GAAIwL,EAAKxL,GAAIiI,IAAOuD,EAAKxL,QAE1D,OAAO,yBAAKyE,UAAWC,KAAMuJ,eAAgBD,I,wCCShCE,GAdC,SAAA1J,GACd,OACE,yBAAKC,UAAWC,KAAMe,MACpB,yBAAKhB,UAAWC,KAAMyJ,YACpB,yBAAKvJ,IAAI,oDAAoDC,IAAI,KACjE,2BAAIL,EAAMtD,OAEZ,yBAAKuD,UAAWC,KAAMzE,SACpB,2BAAIuE,EAAMvE,Y,qBCFZmO,GAAejI,GAAgB,KAkBtBqB,gBAAU,CAAExD,KAAM,WAAlBwD,EAhBG,SAAChD,GACjB,IAAI6J,EAAiB7J,EAAM6J,eAE3B,OACE,0BAAM5G,SAAUjD,EAAMkD,aAAcjD,UAAWC,KAAMe,MACnD,kBAAC4B,GAAA,EAAD,CACEnG,KAAK,aACLoG,SAAU,CAACrB,GAAemI,IAC1BhH,UAAWN,GACXZ,MAAOmI,EACPnH,YAAY,+HAEd,4CCES5B,iBAbS,SAAC/E,GACvB,MAAO,CACL8N,eAAgB9N,EAAMoD,cAAc0K,mBAGf,SAAC3L,GACxB,MAAO,CACL4L,YAAa,SAAChN,GACZoB,ElCckC,SAACpB,GACvC,MAAO,CAAEjB,KAnCU,eAmCUiB,ckCfhBiN,CAAyBjN,QAKzBgE,EApBY,SAACd,GAI1B,OAAO,kBAAC,GAAD,CAAWiD,SAHD,SAACU,GAChB3D,EAAM8J,YAAYnG,EAAO7G,kBCWdkN,GAbU,SAAChK,GAExB,IAAIiK,EAAcjK,EAAMrD,WAAWY,KAAI,SAAC9B,GAAD,OACrC,kBAAC,GAAD,CAASiB,KAAM,SAAUjB,QAASA,EAAQA,QAASD,GAAMC,EAAQD,GAAIiI,IAAOhI,EAAQD,QAEtF,OACE,yBAAKyE,UAAWC,KAAMe,MACpB,yBAAKhB,UAAWC,KAAMgK,UAAWD,GACjC,kBAAC,GAAD,QCMSE,GAbG,SAACnK,GACjB,IAAKA,EAAMtB,OACT,OAAO,kBAAC,KAAD,CAAU+B,GAAG,WAFK,MAIKT,EAAMb,cAA9B1C,EAJmB,EAInBA,QAASE,EAJU,EAIVA,WACjB,OACE,yBAAKsD,UAAWC,KAAMkK,mBACpB,kBAAC,GAAD,CAAgB3N,QAASA,IACzB,kBAAC,GAAD,CAAkBE,WAAYA,MCHrB+J,eAAQ5F,cAND,SAAC/E,GACrB,MAAO,CACLoD,cAAepD,EAAMoD,kBAIwB8G,GAAlCS,CAAoDyD,ICF7DE,GAAc1I,GAAgB,IAoCrBqB,gBAAU,CAAExD,KAAM,SAAlBwD,EAlCG,SAAChD,GACjB,OACE,0BAAMC,UAAWC,KAAMoK,UAAWrH,SAAUjD,EAAMkD,cAC/CT,GAAY,QAAS,QAAS,CAAChB,GAAe4I,IAAc7H,IAC5DC,GAAY,WAAY,WAAY,CAAChB,IAAgBe,GAAO,CAC3D3G,KAAM,aAGR,yBAAKoE,UAAWC,KAAMqK,UACpB,yBAAKtK,UAAWC,KAAMsK,eACpB,2BAAOC,QAAQ,cAAf,iBAGF,yBAAKxK,UAAWC,KAAMwK,UACnBjI,GACC,KACA,aACA,KACAD,GACA,CAAE3G,KAAM,eAKbmE,EAAMkC,OACL,yBAAKjC,UAAWC,KAAMyK,kBAAmB3K,EAAMkC,OAEjD,6BACE,8C,oBChBO0I,GAlBD,SAAC,GAAuB,IAArBnM,EAAoB,EAApBA,MAKf,OALmC,EAAbC,OAMb,kBAAC,KAAD,CAAU+B,GAAI,aAGrB,yBAAKR,UAAWC,KAAMe,MACpB,yBAAKhB,UAAWC,KAAMV,MACpB,qCACA,kBAAC,GAAD,CAAgByD,SAXL,SAAC4H,GAChBpM,EAAMoM,EAAS1P,MAAO0P,EAASzP,SAAUyP,EAASxP,kBCMvCyF,iBAJS,SAAC/E,GAAD,MAAY,CAClC2C,OAAQ3C,EAAMwD,KAAKb,UAGmB,CAAED,MpC0BrB,SAACtD,EAAOC,EAAUC,GAAlB,8CAAiC,WAAO6C,GAAP,iBAAAG,EAAA,sEAC/BnD,EAAcC,EAAOC,EAAUC,GADA,OAEnB,KAD7Bb,EADgD,QAEvCC,KAAK6D,WAChBJ,EAASU,MAELnD,EACFjB,EAASC,KAAKyP,SAASrI,OAAS,EAC5BrH,EAASC,KAAKyP,SAAS,GACvB,aACNhM,EAAS4M,YAAW,QAAS,CAAEC,OAAQtP,MATW,2CAAjC,wDoC1BNqF,EARQ,SAAC,GAAuB,IAArBpC,EAAoB,EAApBA,OAAQD,EAAY,EAAZA,MAChC,OAAO,kBAAC,GAAD,CAAOC,OAAQA,EAAQD,MAAOA,OCYjCuM,G,4LAEFrK,KAAKX,MAAMiL,kB,+BAIX,OAAKtK,KAAKX,MAAMlB,YAId,yBAAKmB,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CAAOiL,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,KAAD,CAAU1K,GAAI,cAC5C,kBAAC,KAAD,CAAOyK,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,KAAD,CAAOD,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,GAAD,SACvC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,KAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,GAAD,SAClC,kBAAC,KAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAACC,GAAD,SAOnC,kBAAC,KAAD,CAAOF,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,WApBhC,kBAAC,GAAD,U,GAPKvK,IAAMC,WAsCT6F,eACbC,KACA7F,cANsB,SAAC/E,GAAD,MAAY,CAClC+C,YAAa/C,EAAM2D,IAAIZ,eAKE,CAAEmM,cpCjCA,kBAAM,SAAC/M,GAClC,IAAImN,EAAUnN,EAASU,KACvB0M,QAAQC,IAAI,CAACF,IAAU9Q,MAAK,WAC1B2D,EAPqC,CACvCrC,KApB0B,+BoCsDb6K,CAGbsE,IChDAQ,IAASL,OACP,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAUxL,MAAOA,GACf,kBAAC,GAAD,QAGJ8L,SAASC,eAAe,S7CkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtR,MAAK,SAAAuR,GACJA,EAAaC,gBAEdC,OAAM,SAAA9J,GACLoB,QAAQpB,MAAMA,EAAMzG,a,mB8CxI5BnC,EAAOC,QAAU,CAAC,KAAO,oBAAoB,aAAe,4BAA4B,KAAO,oBAAoB,KAAO,sB,mBCA1HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,gCAAgC,OAAS,4B,mBCA9JD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,SAAW,4B,mBCAlED,EAAOC,QAAU,CAAC,QAAU,6BAA6B,KAAO,4B,mBCAhED,EAAOC,QAAU,CAAC,QAAU,2B,mBCD5BD,EAAOC,QAAU,IAA0B,yC,mBCC3CD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,KAAO,qB,mBCAnFD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,4BAA4B,QAAU,2B,kBCAlGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,aAAe,6BAA6B,WAAa,2BAA2B,QAAU,0B,mBCA5KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,KAAO,2BAA2B,OAAS,+B,mBCAjHD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,SAAW,qC,mBCAnED,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,sB","file":"static/js/main.6611a8d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loading-circles-acs-rectangles.492f13cb.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Preloader_item__1FUAg\"};","module.exports = __webpack_public_path__ + \"static/media/work_icon.c5c5641b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_work_icon.6a84f8e0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues_content\":\"Dialogues_dialogues_content__du7kf\",\"item\":\"Dialogues_item__2fnnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue_item\":\"PersonDialogue_dialogue_item__2Z1bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CloudSend_item__3zfVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3sotC\",\"error\":\"FormsControls_error__3p1eI\",\"formSummaryError\":\"FormsControls_formSummaryError__3BCwQ\",\"form_item\":\"FormsControls_form_item__16jZM\",\"remember\":\"FormsControls_remember__gsKH-\",\"rememberLable\":\"FormsControls_rememberLable__6LCTh\",\"checkbox\":\"FormsControls_checkbox__3hP9m\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n  headers: {\r\n    \"API-KEY\": \"2207a5d4-08e2-4a3b-98af-c3bbaf315c7d\",\r\n  },\r\n});\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`, {})\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status/`, { status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n  postData: [\r\n    { id: 1, message: \"Hi, how are you?\", likes: 15 },\r\n    { id: 2, message: \"Love me\", likes: 10 },\r\n    { id: 3, message: \"Я хочу найти работу\", likes: 14 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst reducerProfile = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPost,\r\n        likes: 0,\r\n      };\r\n      return Object.assign({}, state, {\r\n        postData: state.postData.concat(newPost),\r\n        newPostText: \"\",\r\n      });\r\n    case SET_USER_PROFILE:\r\n      return Object.assign({}, state, { profile: action.profile });\r\n    case SET_STATUS:\r\n      return Object.assign({}, state, { status: action.status });\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postData: state.postData.filter((p) => p.id !== action.postId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPost) => {\r\n  return {\r\n    type: ADD_POST,\r\n    newPost,\r\n  };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    postId,\r\n  };\r\n};\r\n\r\nexport const setStatusAC = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n  };\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatusAC(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatusAC(status));\r\n  }\r\n};\r\n\r\nexport default reducerProfile;\r\n","const SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n  userArr: [\r\n    { id: 1, name: \"Nastya\" },\r\n    { id: 2, name: \"Sergey\" },\r\n    { id: 3, name: \"Sanya\" },\r\n    { id: 4, name: \"Fedos\" },\r\n    { id: 5, name: \"Valera\" },\r\n  ],\r\n  messageArr: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"I'm fine\" },\r\n    { id: 4, message: \"Go home\" },\r\n    { id: 5, message: \"I go\" },\r\n  ],\r\n};\r\n\r\nconst reducerDialogues = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let newNewMessage = {\r\n        id: 6,\r\n        message: action.newMessage,\r\n      };\r\n      return Object.assign({}, state, {\r\n        messageArr: state.messageArr.concat(newNewMessage),\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageActionCreator = (newMessage) => {\r\n  return { type: SEND_MESSAGE, newMessage };\r\n};\r\n\r\nexport default reducerDialogues;\r\n","let initialState = {\r\n  arrayBest: [\r\n    { id: 1, name: \"Nastya\" },\r\n    { id: 2, name: \"Sergey\" },\r\n    { id: 3, name: \"Sanya\" },\r\n  ],\r\n  allFriend: [\r\n    { id: 1, name: \"Nastya\" },\r\n    { id: 2, name: \"Sergey\" },\r\n    { id: 3, name: \"Sanya\" },\r\n    { id: 4, name: \"Fedos\" },\r\n    { id: 5, name: \"Valera\" },\r\n    { id: 6, name: \"Marina\" },\r\n    { id: 7, name: \"Vasya\" },\r\n    { id: 8, name: \"Ira\" },\r\n    { id: 9, name: \"Inna\" },\r\n    { id: 10, name: \"Kirill\" },\r\n  ],\r\n};\r\n\r\nconst reduerFriends = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default reduerFriends;\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { userAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst reducerUsers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const followSuccess = (userId) => {\r\n  return {\r\n    type: FOLLOW,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const unfollowSuccess = (userId) => {\r\n  return { type: UNFOLLOW, userId };\r\n};\r\nexport const setUsers = (users) => {\r\n  return { type: SET_USERS, users };\r\n};\r\nexport const setIsFetching = (isFetching) => {\r\n  return { type: TOGGLE_IS_FETCHING, isFetching };\r\n};\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n\r\n    let data = await userAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleIsFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleIsFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userAPI.follow.bind(userAPI),\r\n      followSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      userAPI.unfollow.bind(userAPI),\r\n      unfollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default reducerUsers;\r\n","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  data: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport reducerProfile from \"./profile_reducer\";\r\nimport reducerDialogues from \"./dialogues_reducer\";\r\nimport reducerFriends from \"./friends_reducer\";\r\nimport reducerUsers from \"./users_reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: reducerProfile,\r\n  dialoguesPage: reducerDialogues,\r\n  friendPage: reducerFriends,\r\n  usersPage: reducerUsers,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={style.header}>\r\n      <img src=\"https://yt3.ggpht.com/a/AATXAJwjqeBPBlUFN7PkmC6KsliyjFJ9tnva3eaSGxnrlQ=s900-c-k-c0xffffffff-no-rj-mo\" alt=\"\" />\r\n\r\n      <div className={style.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {\" \"}\r\n            {props.login} - <button onClick={props.logout}>Logout</button>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport style from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import SidebarFriends from \"./SidebarFriends/SidebarFriends\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={style.navbar}>\r\n      <span className={style.item}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/profile\">\r\n          Profile\r\n        </NavLink>\r\n      </span>\r\n      <span className={style.item}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/dialogues\">\r\n          Messages\r\n        </NavLink>\r\n      </span>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/news\">\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/music\">\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/setting\">\r\n          Setting\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${style.item} ${style.itemDisabled}`}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/friends\">\r\n          Friends\r\n        </NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink className={style.navLink} activeClassName={style.activeLink} to=\"/users\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport classProfile from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={classProfile.item}>\r\n      <div className={classProfile.message}>\r\n        <img\r\n          src=\"https://www.freeiconspng.com/uploads/man-icon-png-29.png\"\r\n          alt=\"\"\r\n        />\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <hr />\r\n      <div className={classProfile.like}>\r\n        <span>like {props.like}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","export const requiredField = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCretor = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport style from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const showError = touched && error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (showError ? style.error : \"\")}>\r\n      <div>{children}</div>\r\n      {showError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        component={component}\r\n        validate={validators}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport classProfile from \"./MyPosts.module.css\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLengthCretor(30);\r\n\r\nlet NewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classProfile.add_news}>\r\n      <Field\r\n        validate={[requiredField, maxLength30]}\r\n        name=\"newPost\"\r\n        component={Textarea}\r\n        placeholder=\"Your news\"\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"post\" })(NewPostForm);\r\n","import React from \"react\";\r\nimport classProfile from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPostForm from \"./NewPostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"lalalal\");\r\n  let postsElem = props.postData.map((post) => (\r\n    <Post message={post.message} like={post.likes} id={post.id} key={post.id} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPost);\r\n  };\r\n\r\n  return (\r\n    <div className={classProfile.my_posts}>\r\n      <div className=\"header_posts\">\r\n        <h4>My Posts</h4>\r\n      </div>\r\n      <NewPostForm onSubmit={onAddPost} />\r\n      <div className={classProfile.added_news}>{postsElem}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostTextChange: state.profilePage.newPostText,\r\n    postData: state.profilePage.postData,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost));\r\n    },\r\n  };\r\n};\r\nconsole.log(\"lalalal23\")\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport preloader from \"../../../assets/img/Loading-circles-acs-rectangles.webp\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\n\r\nconst Preloader=()=>{\r\n    return(\r\n        <div className={style.item}>\r\n        <img alt=\"loader\" src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activeteEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactiveteEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activeteEditMode}>\r\n            {props.status || \"-------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onBlur={deactiveteEditMode}\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"./../../../assets/img/user-avatar.png\";\r\nimport workLogo from \"../../../assets/img/work_icon.svg\";\r\nimport searchWorkLogo from \"../../../assets/img/no_work_icon.svg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return (\r\n      <div className={style.preloader}>\r\n        <Preloader />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style.photo}>\r\n        <img\r\n          src={\r\n            props.profile.photos.large !== null\r\n              ? props.profile.photos.large\r\n              : userPhoto\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      <div className={style.info}>\r\n        <h3>Information</h3>\r\n        <p>Full Name: {props.profile.fullName}</p>\r\n        <p>Facebook: {props.profile.contacts.facebook}</p>\r\n        <p>\r\n          Job:\r\n          {props.profile.lookingForAJob ? (\r\n            <img src={workLogo} alt=\"Есть работа\" />\r\n          ) : (\r\n            <img src={searchWorkLogo} alt=\"Нет работы\" />\r\n          )}\r\n        </p>\r\n        <p>{props.profile.lookingForAJobDescription}</p>\r\n        <p>Status: {props.profile.aboutMe}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classProfile from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classProfile.content}>\r\n      <img\r\n        src=\"https://avatars.mds.yandex.net/get-pdb/1516664/09249b5a-9f96-419d-8d26-14d33b095ec2/s1200\"\r\n        alt=\"\"\r\n      />\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Container) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Container {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport classProfile from \"./Profile.module.css\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile } from \"../../Redux/profile_reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus, updateStatus } from \"./../../Redux/profile_reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId=this.props.userId\r\n      if(!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classProfile.content}>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  userId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\n// import style from \"./Setting.module.css\"\r\n\r\nconst Setting = ()=>{\r\n    return(\r\n        <div>\r\n            <h1>Setting</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from \"react\";\r\n// import style from \"./Music.module.css\";\r\n\r\nconst Music = (props) =>{\r\n    return(\r\n        <div>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\n// import style from \"./News.module.css\";\r\n\r\nconst News = (props)=>{\r\n    return(\r\n        <div>\r\n            <h1>News</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport userPhoto from \"../../assets/img/user-avatar.png\";\r\nimport style from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div className={style.user}>\r\n      <div className={style.info}>\r\n        <NavLink to={`/profile/` + user.id}>\r\n          <img\r\n            src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n            alt=\"\"\r\n          />\r\n        </NavLink>\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <div>{user.name}</div>\r\n              <div>{\"user.surname\"}</div>\r\n            </div>\r\n            <div>{user.status}</div>\r\n          </span>\r\n          <span>\r\n            <div>{\"user.location.city\"}</div>\r\n            <div>{\"user.location.country\"}</div>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={style.buttons}>\r\n        {user.followed ? (\r\n          <button\r\n            disabled={followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => {\r\n              unfollow(user.id);\r\n            }}\r\n          >\r\n            Unollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            disabled={followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => {\r\n              follow(user.id);\r\n            }}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default User;\r\n","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport User from \"./User\";\r\n\r\nlet UsersPresent = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      {props.users.map((user) => (\r\n        <User\r\n          user={user}\r\n          key={user.id}\r\n          follow={props.follow}\r\n          unfollow={props.unfollow}\r\n          followingInProgress={props.followingInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPresent;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={style.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button className={style.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          prev\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={cn(\r\n                {\r\n                  [style.selectedPage]: currentPage === p,\r\n                },\r\n                style.pageNumber\r\n              )}\r\n              key={p}\r\n              onClick={(e) => {\r\n                onPageChange(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button className={style.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          next\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users)=>{\r\n  return users.filter((u) => true);\r\n});\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n","import React from \"react\";\r\nimport UserPresent from \"./UserPresent\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  getUsersThunk,\r\n} from \"../../Redux/users_reduser\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const { pageSize, getUsers, setCurrentPage } = this.props;\r\n    getUsers(pageNumber, pageSize);\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Paginator\r\n          totalItemsCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChange={this.onPageChanged}\r\n        />\r\n        {this.props.isFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <UserPresent\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            onPageChanged={this.onPageChanged}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    isFetching: getIsFetching(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    getUsers: getUsersThunk,\r\n  })\r\n)(UsersAPIComponent);\r\n","import React from \"react\";\r\nimport style from \"./DialogueItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogueItem = props => {\r\n  return (\r\n    <div className={style.item}>\r\n      <NavLink activeClassName={style.active} to={\"/dialogues/\" + props.id}>\r\n      <img src=\"https://redcdn.net/topicit/images/no-avatar-1.png\" alt=\"\" />\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueItem;\r\n","import React from \"react\";\r\nimport style from \"./PersonDialogue.module.css\";\r\nimport DialogueItem from \"./DialogueItem/DialogueItem\";\r\n\r\nconst PersonDialogue = (props) => {\r\n  let dialoguesElem = props.userArr.map(user => (\r\n    <DialogueItem name={user.name} id={user.id} key = {user.id} />\r\n  ));\r\n  return <div className={style.dialogue_item}>{dialoguesElem}</div>;\r\n};\r\nexport default PersonDialogue;\r\n","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nconst Message = props => {\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.name_photo}>\r\n        <img src=\"https://redcdn.net/topicit/images/no-avatar-1.png\" alt=\"\" />\r\n        <p>{props.name}</p>\r\n      </div>\r\n      <div className={style.message}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport style from \"./CloudSend.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCretor(100);\r\n\r\nconst CloudSend = (props) => {\r\n  let newMessageText = props.newMessageText;\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={style.item}>\r\n      <Field\r\n        name=\"newMessage\"\r\n        validate={[requiredField, maxLength100]}\r\n        component={Textarea}\r\n        value={newMessageText}\r\n        placeholder=\"Введите ваше сообщение\"\r\n      ></Field>\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"message\" })(CloudSend);\r\n","import React from \"react\";\r\nimport { sendMessageActionCreator } from \"../../../../Redux/dialogues_reducer\";\r\nimport CloudSend from \"./CloudSendForm\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CloudSendContainer = (props) => {\r\n  let newMessage = (values) => {\r\n    props.sendMessage(values.newMessage);\r\n  };\r\n  return <CloudSend onSubmit={newMessage} />;\r\n};\r\n\r\nlet mapNewMessageText = (state) => {\r\n  return {\r\n    newMessageText: state.dialoguesPage.newMessageText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(sendMessageActionCreator(newMessage));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapNewMessageText, mapDispatchToProps)(CloudSendContainer);\r\n","import React from \"react\";\r\nimport style from \"./PrivateDialogues.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport CloudSendContainer from \"./СloudSend/CloudSendContainer\";\r\n\r\nconst PrivateDialogues = (props) => {\r\n\r\n  let messageElem = props.messageArr.map((message) => (\r\n    <Message name={\"Nastya\"} message={message.message} id = {message.id} key = {message.id} />\r\n  ));\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.messages}>{messageElem}</div>\r\n      <CloudSendContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateDialogues;\r\n","import React from \"react\";\r\nimport style from \"./Dialogues.module.css\";\r\nimport PersonDialogue from \"./PersonDialogue/PersonDialogue\";\r\nimport PrivateDialogues from \"./PrivateDialogues/PrivateDialogues\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dialogues = (props) => {\r\n  if (!props.isAuth) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  const { userArr, messageArr } = props.dialoguesPage;\r\n  return (\r\n    <div className={style.dialogues_content}>\r\n      <PersonDialogue userArr={userArr} />\r\n      <PrivateDialogues messageArr={messageArr} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogues;\r\n","import Dialogues from \"./Dialogues\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialoguesPage: state.dialoguesPage,\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(Dialogues);\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCretor,\r\n} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength20 = maxLengthCretor(20);\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form className={style.form_item} onSubmit={props.handleSubmit}>\r\n      {createField(\"Email\", \"email\", [requiredField, maxLength20], Input)}\r\n      {createField(\"Password\", \"password\", [requiredField], Input, {\r\n        type: \"password\",\r\n      })}\r\n\r\n      <div className={style.remember}>\r\n        <div className={style.rememberLable}>\r\n          <label htmlFor=\"rememberMe\">remember me </label>\r\n        </div>\r\n\r\n        <div className={style.checkbox}>\r\n          {createField(\r\n            null,\r\n            \"rememberMe\",\r\n            null,\r\n            Input,\r\n            { type: \"checkbox\" },\r\n            { id: \"rememberMe\" }\r\n          )}\r\n        </div>\r\n      </div>\r\n      {props.error && (\r\n        <div className={style.formSummaryError}>{props.error}</div>\r\n      )}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"login\" })(LoginForm);\r\n","import React from \"react\";\r\nimport ReduxLoginForm from \"./LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"./Login.module.css\";\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.form}>\r\n        <h3>Login</h3>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport { login } from \"../../Redux/auth-reducer\";\r\nimport React from \"react\";\r\n\r\nconst LoginContainer = ({ isAuth, login }) => {\r\n  return <Login isAuth={isAuth} login={login} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginContainer);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport { Route, withRouter, Redirect } from \"react-router-dom\";\r\nimport Setting from \"./components/Setting/Setting\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\n// import Friends from \"./components/Friends/Friends\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport DialoguesConnected from \"./components/Dialogues/DialoguesContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path=\"/\" render={() => <Redirect to={\"/login\"} />} />\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/dialogues\" render={() => <DialoguesConnected />} />\r\n          <Route path=\"/music\" render={() => <Music />} />\r\n          <Route path=\"/news\" render={() => <News />} />\r\n          <Route path=\"/setting\" render={() => <Setting />} />\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          {/* <Route\r\n            path=\"/friends\"\r\n            // render={() => (\r\n            //   <Friends allFriend={this.props.state.friendPage.allFriend} />\r\n            )}\r\n          /> */}\r\n          <Route path=\"/login\" render={() => <LoginContainer />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App);","import \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./Redux/redux-store\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__3kEc8\",\"selectedPage\":\"Users_selectedPage__EDVV3\",\"user\":\"Users_user__K7ZgD\",\"info\":\"Users_info__2aAeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__N5JHp\",\"pageNumber\":\"Paginator_pageNumber__1Z0_N\",\"selectedPage\":\"Paginator_selectedPage__4e46b\",\"button\":\"Paginator_button__6n5Qv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__2RunZ\",\"add_news\":\"MyPosts_add_news__2gZv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__10svT\",\"info\":\"ProfileInfo_info__3U8dc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__bR3gc\"};","module.exports = __webpack_public_path__ + \"static/media/user-avatar.09001408.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1MTGV\",\"message\":\"Post_message__3Ix7v\",\"like\":\"Post_like__18q8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__2ezuA\",\"name_photo\":\"Message_name_photo__1RqyE\",\"message\":\"Message_message__1OzXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__4J0zQ\",\"item\":\"Navbar_item__EaxNm\",\"itemDisabled\":\"Navbar_itemDisabled__3OlD9\",\"activeLink\":\"Navbar_activeLink__1hzQr\",\"navLink\":\"Navbar_navLink__1Cztt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3yZoK\",\"loginBlock\":\"Header_loginBlock__3gRxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue_item\":\"DialogueItem_dialogue_item__BsJ3a\",\"item\":\"DialogueItem_item__Fk3of\",\"active\":\"DialogueItem_active__20Cdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PrivateDialogues_item__2Iir5\",\"messages\":\"PrivateDialogues_messages__RK4uv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Login_item__AUJW1\",\"form\":\"Login_form__1a6iE\"};"],"sourceRoot":""}